x = "Sezon",
y = "Ocena") +
theme(title = element_text(size = 11, face = "bold"),
axis.title.x = element_text(size = 15,
face = "plain"))
danewykres %>%
ggplot(., aes(sezon, ocena)) +
geom_smooth(color = "black", size = 1.2, linetype = "solid") +
labs(title = "Średnia ocena sezonów przez użytkowników",
x = "Sezon",
y = "Ocena") +
theme(title = element_text(size = 11, face = "bold"),
axis.title.x = element_text(size = 30,
face = "plain"))
danewykres %>%
ggplot(., aes(sezon, ocena)) +
geom_smooth(color = "black", size = 1.2, linetype = "solid") +
labs(title = "Średnia ocena sezonów przez użytkowników",
x = "Sezon",
y = "Ocena") +
theme(title = element_text(size = 11, face = "bold"),
axis.title.x = element_text(size = 12,
face = "plain"))
danewykres %>%
ggplot(., aes(sezon, ocena)) +
geom_smooth(color = "black", size = 1.2, linetype = "solid") +
labs(title = "Średnia ocena sezonów przez użytkowników",
x = "Sezon",
y = "Ocena") +
theme(title = element_text(size = 11, face = "bold"),
axis.title.x = element_text(size = 12,
face = "plain"))
danewykres %>%
ggplot(., aes(sezon, ocena)) +
geom_smooth(color = "black", size = 1.2, linetype = "solid") +
labs(title = "Średnia ocena sezonów przez użytkowników",
x = "Sezon",
y = "Ocena") +
theme(title = element_text(size = 11),
axis.title.x = element_text(size = 12,
face = "plain"))
danewykres %>%
ggplot(., aes(sezon, ocena)) +
geom_smooth(color = "black", size = 1.2, linetype = "solid") +
labs(title = "Średnia ocena sezonów przez użytkowników",
x = "Sezon",
y = "Ocena") +
theme(title = element_text(size = 11, face = "bold"),
axis.title.x = element_text(size = 12,
face = "plain"))
danewykres %>%
ggplot(., aes(sezon, ocena)) +
geom_smooth(color = "black", size = 1.2, linetype = "solid") +
labs(title = "Średnia ocena sezonów przez użytkowników",
x = "Sezon",
y = "Ocena") +
theme(title = element_text(size = 11, face = "bold"),
axis.title.x = element_text(size = 12,
face = "plain"),
axis.title.x = element_text(size = 12,
face = "plain"))
danewykres %>%
ggplot(., aes(sezon, ocena)) +
geom_smooth(color = "black", size = 1.2, linetype = "solid") +
labs(title = "Średnia ocena sezonów przez użytkowników",
x = "Sezon",
y = "Ocena") +
theme(title = element_text(size = 11, face = "bold"),
axis.title.x = element_text(size = 12,
face = "plain"),
axis.title.y = element_text(size = 12,
face = "plain"))
danewykres %>%
ggplot(., aes(sezon, ocena)) +
geom_smooth(color = "black", size = 1.2, linetype = "solid") +
labs(title = "Średnia ocena sezonów przez użytkowników",
x = "Sezon",
y = "Ocena") +
theme(title = element_text(size = 11, face = "bold"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12,
face = "plain"))
danewykres %>%
ggplot(., aes(sezon, ocena)) +
geom_smooth(color = "black", size = 1.2, linetype = "solid") +
labs(title = "Średnia ocena sezonów przez użytkowników",
x = "Sezon",
y = "Ocena") +
theme(title = element_text(size = 11, face = "bold.italic"),
axis.title.x = element_text(size = 12,
face = ),
axis.title.y = element_text(size = 12,
face = "plain"))
danewykres %>%
ggplot(., aes(sezon, ocena)) +
geom_smooth(color = "black", size = 1.2, linetype = "solid") +
labs(title = "Średnia ocena sezonów przez użytkowników",
x = "Sezon",
y = "Ocena") +
theme(title = element_text(size = 11, face = "bold.italic"),
axis.title.x = element_text(size = 12,
face = "italic"),
axis.title.y = element_text(size = 12,
face = "italic"))
danewykres %>%
ggplot(., aes(sezon, ocena)) +
geom_smooth(color = "black", size = 1.2, linetype = "solid") +
labs(title = "Średnia ocena sezonów przez użytkowników",
x = "Sezon",
y = "Ocena") +
theme(title = element_text(size = 11, face = "bold.italic"),
axis.title.x = element_text(size = 12,
face = "italic"),
axis.title.y = element_text(size = 12,
face = "italic")
legend.position = "bottom",
danewykres %>%
ggplot(., aes(sezon, ocena)) +
geom_smooth(color = "black", size = 1.2, linetype = "solid") +
labs(title = "Średnia ocena sezonów przez użytkowników",
x = "Sezon",
y = "Ocena") +
theme(title = element_text(size = 11, face = "bold.italic"),
axis.title.x = element_text(size = 12,
face = "italic"),
axis.title.y = element_text(size = 12,
face = "italic"),
legend.position = "bottom",
legend.direction = "horizontal")
danewykres %>%
ggplot(., aes(sezon, ocena)) +
geom_smooth(color = "black", size = 1.2, linetype = "solid") +
labs(title = "Średnia ocena sezonów przez użytkowników",
x = "Sezon",
y = "Ocena") +
theme(title = element_text(size = 11, face = "bold.italic"),
axis.title.x = element_text(size = 12,
face = "italic"),
axis.title.y = element_text(size = 12,
face = "italic")) -> wykres1
wykres1# scale_x_continuous(limits = c(1,5))
danewykres %>%
ggplot(., aes(sezon, ocena)) +
geom_smooth(color = "black", size = 1.2, linetype = "solid") +
labs(title = "Średnia ocena sezonów przez użytkowników",
x = "Sezon",
y = "Ocena") +
theme(title = element_text(size = 11, face = "bold.italic"),
axis.title.x = element_text(size = 12,
face = "italic"),
axis.title.y = element_text(size = 12,
face = "italic"))
serialeIMDB %>%
filter(serial == "The Sopranos") %>%
summarise(maxgl = max(glosow, na.rm = T),
maxoc = max(ocena, na.rm = T),
srednia = mean(sezon)) -> wynik
return(wynik)
NajlepOdcTheSoprano <- function(glosow, serial, ocena, sezon ,odcinek) {
serialeIMDB %>%
filter(serial == "The Sopranos") %>%
summarise(maxgl = max(glosow, na.rm = T),
maxoc = max(ocena, na.rm = T),
srednia = mean(sezon)) -> wynik
return(wynik)
}
wynik
str(sezon)
str(serialeIMDB)
serialee$sezon <- as.numeric(serialee$sezon)
str(serialeIMDB)
str(serialee)
str(serialee)
serialee#liczba odc i ich średnia ocena
serialeIMDBe$sezon <- as.numeric(serialeIMDB$sezon)
serialeIMDB$sezon <- as.numeric(serialeIMDB$sezon)
NajlepOdcTheSoprano <- function(glosow, serial, ocena, sezon ,odcinek) {
serialeIMDB %>%
filter(serial == "The Sopranos") %>%
summarise(maxgl = max(glosow, na.rm = T),
maxoc = max(ocena, na.rm = T),
srednia = mean(sezon)) -> wynik
return(wynik)
}
wynik
NajlepOdcTheSoprano <- function(glosow, serial, ocena, sezon ,odcinek) {
serialeIMDB %>%
filter(serial == "The Sopranos") %>%
summarise(maxgl = max(glosow, na.rm = T),
maxoc = max(ocena, na.rm = T),
srednia = mean(ocena)) -> wynik
return(wynik)
}
wynik
serialeIMDB %>%
filter(serial == "The Sopranos") %>%
summarise(maxgl = max(glosow, na.rm = T),
maxoc = max(ocena, na.rm = T),
srednia = mean(ocena, na.rm = T)) -> wynik
return(wynik)
NajlepOdcTheSoprano <- function(glosow, serial, ocena, sezon ,odcinek) {
serialeIMDB %>%
filter(serial == "The Sopranos") %>%
summarise(maxgl = max(glosow, na.rm = T),
maxoc = max(ocena, na.rm = T),
srednia = mean(ocena, na.rm = T)) -> wynik
return(wynik)
}
wynik
NajlepOdcTheSoprano <- function(glosow, serial, ocena, sezon ,odcinek) {
serialeIMDB %>%
filter(serial == "The Sopranos") %>%
summarise(maxgl = max(glosow, na.rm = T),
maxoc = max(ocena, na.rm = T),
srednia = mean(ocena, na.rm = T)) -> wynik
return(wynik)
}
View(danewykres)
View(serialee)
serialeIMDB %>%
filter(serial == "The Sopranos") %>%
summarise(maxgl = max(glosow, na.rm = T),
maxoc = max(ocena, na.rm = T),
srednia = mean(ocena/odcinek, na.rm = T)) -> wynik
str(serialeIMDB)
serialeIMDB$sezon <- as.numeric(serialeIMDB$sezon)
str(serialeIMDB)
serialeIMDB
str(serialeIMDB)
serialeIMDB$odcinek <- as.numeric(serialeIMDB$odcinek)
serialeIMDB$sezon <- as.numeric(serialeIMDB$sezon)
str(serialeIMDB)
serialeIMDB
str(serialeIMDB)
serialeIMDB %>%
filter(serial == "The Sopranos") %>%
summarise(maxgl = max(glosow, na.rm = T),
maxoc = max(ocena, na.rm = T),
srednia = mean(ocena/odcinek, na.rm = T)) -> wynik
return(wynik)
NajlepOdcTheSoprano <- function(glosow, serial, ocena, sezon ,odcinek) {
serialeIMDB %>%
filter(serial == "The Sopranos") %>%
summarise(maxgl = max(glosow, na.rm = T),
maxoc = max(ocena, na.rm = T),
srednia = mean(ocena/odcinek, na.rm = T)) -> wynik
return(wynik)
}
wynik
srednia <-  mean(ocena/odcinek, na.rm = T)
srednia <-  mean(serialeIMDB$ocena/serialeIMDB$odcinek, na.rm = T)
srednia
serialeIMDB %>%
filter(serial == "The Sopranos") %>%
\int\limits_ocena^odcinek
serialeIMDB %>%
filter(serial == "The Sopranos") %>%
\int\limits_ocena^odcinek
serialeIMDB %>%
filter(serial == "The Sopranos") %>%
\begin{equation}
x = a_0 + \cfrac{1}{ocena_1
return(wynik)
NajlepOdcTheSoprano <- function(glosow, serial, ocena, sezon ,odcinek) {
serialeIMDB %>%
filter(serial == "The Sopranos") %>%
\begin{equation}
+ \cfrac{1}{ocena_3 + \cfrac{1}{ocena_4} } } }
}
srednia <-  mean(serialeIMDB$ocena/serialeIMDB$odcinek, na.rm = T)
+ \cfrac{1}{ocena_3 + \cfrac{1}{ocena_4} } } } -> wynik
return(wynik)
obliczenia <- function(glosow, serial, ocena, sezon ,odcinek) {
serialeIMDB %>%
filter(serial == "The Sopranos") %>%
\begin{equation}
serialeIMDB %>%
filter(serial == "The Sopranos") %>%
\frac{\frac{1}{ocena}+\frac{1}{glosow}}{glosow-sezon} -> wynik
\frac{\frac{1}{ocena}+\frac{1}{glosow}}{glosow-sezon} -> wynik
frac{\frac{1}{ocena}+\frac{1}{glosow}}{glosow-sezon} -> wynik
serialeIMDB %>%
filter(serial == "The Sopranos") %>%
frac{\frac{1}{ocena}+\frac{1}{glosow}}{glosow-sezon} -> wynik
return(wynik)
obliczenia <- function(glosow, serial, ocena, sezon ,odcinek) {
serialeIMDB %>%
filter(serial == "The Sopranos") %>%
frac{\frac{1}{ocena}+\frac{1}{glosow}}{glosow-sezon} -> wynik
serialeIMDB %>%
filter(serial == "The Sopranos") %>%
\frac{\frac{1}{ocena}+\frac{1}{glosow}}{glosow-sezon} -> wynik
str(serialeIMDB)
serialeIMDB %>%
ggplot(., aes(glosow)) +
geom_histogram()
serialeIMDB %>%
ggplot(., aes(glosow)) +
geom_histogram()
install.packages("tidyverse")
install.packages("gdata")
install.packages("PogromcyDanych")
install.packages("devtools")
install.packages("lubridate")
install.packages("palmerpenguins")
install.packages("dplyr")
install.packages("XML")
install.packages("RCurl")
install.packages("DT")
library(tidyverse)
library(devtools)
library(PogromcyDanych)
library(gdata)
library(dplyr)
library(lubridate)
library(palmerpenguins)
library(XML)
library(RCurl)
library(DT)
install.packages("dplyr")
install.packages("lubridate")
serialeIMDB %>%
filter(serial == "The Sopranos") %>%
summarise(obl = \frac{\frac{1}{ocena}+\frac{1}{glosow}}{glosow-sezon}) -> wynik
serialeIMDB %>%
summarise(obl = \frac{\frac{1}{ocena}+\frac{1}{glosow}}{glosow-sezon}) -> wynik
return(wynik)
serialeIMDB %>%
summarise(obl = (\frac{\frac{1}{ocena}+\frac{1}{glosow}}{glosow-sezon})) -> wynik
serialeIMDB %>%
summarise(f(n) = n^5 + 4n^2 + 2 |_{n=17}) -> wynik
return(wynik)
obliczenia <- function(glosow, serial, ocena, sezon ,odcinek) {
serialeIMDB %>%
filter(serial == "The Sopranos") %>%
summarise(obl = \frac{\frac{1}{ocena}+\frac{1}{glosow}}{glosow-sezon}) -> wynik
\frac{1}{ocena}+\frac{1}{glosow}}{glosow-sezon} -> wynik
summarise( obl = \frac{1}{ocena}+\frac{1}{glosow}}{glosow-sezon}) -> wynik
summarise(obl = \frac{1}{ocena}+\frac{1}{glosow}}{glosow-sezon}) -> wynik
summarise(obl = \frac{1}{ocena}+\frac{1}{glosow}}{glosow-sezon})
serialeIMDB %>%
ggplot(., aes(glosow)) +
geom_histogram()
serialeIMDB %>%
ggplot(., aes(glosow, odcinek)) +
geom_histogram()
serialeIMDB %>%
ggplot(., aes(glosow)) +
geom_histogram()
serialeIMDB %>%
ggplot(., aes(glosow, ocena)) +
geom_point()
serialee %>%
filter(serial == "Game of Thrones") %>%
select(ocena) -> ocenaGOT
serialee %>%
filter(serial == "Game of Thrones") %>%
select(glosow) -> glosyGOT
danewykresgot <- data.frame(ocena, glosow)
danewykresgot <- data.frame(ocenaGOT, glosowGOT)
danewykresgot
serialeIMDB %>%
ggplot(., aes(ocena, glosow)) +
geom_point()
serialeIMDB %>%
ggplot(., aes(glosow, ocena)) +
geom_point()
view(ocena)
view(ocenaGOT)
View(danewykresgot)
danewykresgot %>%
ggplot(., aes(glosow, ocena)) +
geom_point()
danewykresgot %>%
ggplot(., aes(glosow, ocena)) +
geom_point() +
labs(title = "Stosunek liczy głosów użytkowników do oceny odcinka",
x = "Głosy",
y = "Ocena") +
theme(title = element_text(size = 11, face = "bold.italic"),
axis.title.x = element_text(size = 12,
face = "italic"),
axis.title.y = element_text(size = 12,
face = "italic")) -> wykres1
danewykresgot %>%
ggplot(., aes(glosow, ocena)) +
geom_point() +
labs(title = "Stosunek liczy głosów użytkowników do oceny odcinka",
x = "Głosy",
y = "Ocena") +
theme(title = element_text(size = 11, face = "bold.italic"),
axis.title.x = element_text(size = 12,
face = "italic"),
axis.title.y = element_text(size = 12,
face = "italic")) -> wykres2
wykres2# scale_x_continuous(limits = c(1,5))
wykres1
danewykres %>%
ggplot(., aes(sezon, ocena)) +
geom_smooth(color = "black", size = 1.2, linetype = "solid") +
labs(title = "Średnia ocena sezonów przez użytkowników",
x = "Sezon",
y = "Ocena") +
theme(title = element_text(size = 11, face = "bold.italic"),
axis.title.x = element_text(size = 12,
face = "italic"),
axis.title.y = element_text(size = 12,
face = "italic")) -> wykres1
wykres1
danewykres %>%
ggplot(., aes(sezon, ocena)) +
geom_smooth(color = "black", size = 1.2, linetype = "solid") +
labs(title = "Średnia ocena sezonów przez użytkowników",
x = "Sezon",
y = "Ocena") +
theme(title = element_text(size = 11, face = "bold.italic"),
axis.title.x = element_text(size = 12,
face = "italic"),
axis.title.y = element_text(size = 12,
face = "italic")) -> wykres1
wykres1
install.package("amsmath")
install.package("mathtools")
usepackage{amsmath}
---
title: "Projekt"
ocenamin = min(ocena)
ocenamin = min(serialeIMDB$ocena)
ocenamin
ocenamax = max(serialeIMDB$ocena)
ocenamax
ocename = mean(serialeIMDB$ocena)
ocename
glosmax = max(serialeIMDB$glosow)
gloxmax
glosmax
obl <- (((log3(ocena) * exp^b)/sin(x) + sqrt(ocename))*glosmax
summarise(obl = \frac{1}{ocena}+\frac{1}{glosow}}{glosow-sezon})
obl <- (((log3(ocena) * exp^b)/sin(x) + sqrt(ocename))*glosmax)
obl <- (((log2(ocena) * exp^b)/sin(x) + sqrt(ocename))*glosmax)
serialeIMDB %>%
(((log2(ocena) * exp^b)/sin(x) + sqrt(ocename))*glosmax) -> obl
serialeIMDB %>%
(((log2(serialeIMDB$ocena) * exp^b)/sin(x) + sqrt(ocename))*glosmax) -> obl
x <-  10, b <-  20
ocename = mean(serialeIMDB$ocena)
serialeIMDB %>%
summarise(((log2(serialeIMDB$ocena) * exp^b)/sin(x) + sqrt(ocename))*glosmax) -> obl
(((log2(serialeIMDB$ocena) * exp^b)/sin(x) + sqrt(ocename))*glosmax) -> obl
x <-  10, b <-  20
x <-  10
b <-  20
(((log2(serialeIMDB$ocena) * exp^b)/sin(x) + sqrt(ocename))*glosmax) -> obl
x <-  as.numeric(10)
b <-  as.numeric(20)
ocename = mean(serialeIMDB$ocena)
ocename
glosmax = max(serialeIMDB$glosow)
glosmax
(((log2(serialeIMDB$ocena) * exp^b)/sin(x) + sqrt(ocename))*glosmax) -> obl
(((log2(serialeIMDB$ocena) * exp(b)/sin(x) + sqrt(ocename))*glosmax) -> obl
summarise(obl = \frac{1}{ocena}+\frac{1}{glosow}}{glosow-sezon})
(((log2(serialeIMDB$ocena) * exp(b)/sin(x) + sqrt(ocename))*glosmax) -> obl
obl
((log2(serialeIMDB$ocena) * exp(b)/sin(x) + sqrt(ocename))*glosmax) -> obl
obl
srednia <-  mean(ocenaBB/odcinekBB, na.rm = T)
((log2(serialeIMDB$ocena) * exp(b)/sin(x) + sqrt(ocename))*glosmax) -> obl
obl
((log2(ocenaBB) * exp(b)/sin(x) + sqrt(ocename))*glosmax) -> obl
obl
((log2(ocenaBB) * exp(b)/sin(x) + sqrt(ocename))+glosmax) -> obl
obl
$$((log2(ocenaBB) * exp(b)/sin(x) + sqrt(ocename))+glosmax) -> obl$$
((log2(ocenaBB) * exp(b)/sin(x) + sqrt(ocename))+glosmax) -> obl
((log2(ocenaBB) * exp(b)/sin(x) + sqrt(ocename))+glosmax) -> obl2
obl2
obliczenia <- function(ocenaBB, ocename, glosmax, b, x) {
x <-  as.numeric(10)
b <-  as.numeric(20)
ocename = mean(serialeIMDB$ocena)
glosmax = max(serialeIMDB$glosow)
((log2(ocenaBB) * exp(b)/sin(x) + sqrt(ocename))+glosmax) -> obl2
}
obl2
remove(obl2)
((log2(ocenaBB) * exp(b)/sin(x) + sqrt(ocename))+glosmax) -> obl2
obl2
return(obl2)
obl2
View(serialee)
baza1 <- c("SpongeBob SquarePants", "Phineas and Ferb", "BoJack Horseman")
sezony1 <- c(13, 4, 6)
oceny1 <- c(7.2,7.6,8.6)
jeden <- data.frame(baza1, sezony1, oceny1)
jeden```
jeden
baza1 <- c("SpongeBob SquarePants", "Phineas and Ferb", "BoJack Horseman")
sezony1 <- c(13, 4, 6)
oceny1 <- c(7.2,7.6,8.6)
jeden <- data.frame(baza1, sezony1, oceny1)
baza2 <- c("Chernobyl", "PRick and Morty", "The Queen's Gambit")
sezony2 <- c(1, 6, 1)
oceny2 <- c(8.9,8.6,8.2)
dwa <- data.frame(baza2, sezony2, oceny2)
baza3 <- c("Cowboy Bepop", "Vikings", "When They See us")
sezony3 <- c(1, 6, 1)
oceny3 <- c(8.3,8.4,8.2)
trzy <- data.frame(baza3, sezony3, oceny3)
View(jeden)
View(trzy)
View(dwa)
